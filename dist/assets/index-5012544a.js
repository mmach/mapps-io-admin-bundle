import{B as j,m,R as n,h as C,k as E,e as N,u as M,l as O,g as _,G as S,j as i,F as k,v as G}from"./index-96500733.js";class H extends j{constructor(){super(),this.blob=0,this.type=0,this.uid=""}decode(t){let l=decodeBase64Image(t);this.blob=l.data,this.type=l.type}getSize(t){return stringToBytesFaster(t.blob).length/1e3}}function q(z){const t=m.byName("mapps-component-dropzone").component,l=m.byName("mapps-component-body-loader").component,L=m.byName("mapps-component-button-loader").component,[d,P]=n.useState([]),[g,h]=n.useState(!1),[B,f]=n.useState([]),{selectors:{userProfileImageReducer:c=c},actions:{setLoading:R=R,uploadImage:b=b,getUserImages:y=y}}=C();E();const{selectors:{userProfileReducer:o=o},actions:{getUserInfo:F=F}}=N(),{getLabel:w,translate:x}=M(),{selectors:{authReducer:u=u},actions:{setAuthContext:I=I}}=O();n.useEffect(()=>{P(c.images)},[c.images]);const A=n.useMemo(()=>u.user.id==o.user.id,[o.user.id]);async function v(){let s=await F(o.user.id);s.data.id==u.user.id&&I(s.data)}const D=s=>{try{const a=[];for(let e=0;e<s.length;e++){const r=s[e],p=new window.FileReader;p.readAsDataURL(r),p.onload=()=>{const U={name:r.name,type:r.type,size:Math.round(r.size/1e3)+" kB",base64:p.result,file:r};a.push(U)}}f(a)}catch(a){console.error(a)}};async function T(){h(!0);const s=B.map(a=>{const e=new H;return e.id=G(),e.blob=a.base64.split("base64,")[1],e.type=a.type,b(e)});await Promise.all(s),await y({user_id:o.user.id}),f([]),await v(),h(!1)}return 5-d.length>0&&A?_(S,{children:[g?i(S,{style:{height:"240px",display:"flex"},children:i(l,{text:" ",size:"25px"})}):i(t,{className:"mapps-user-images-upload-dropzone-area",onChange:D,filesLimit:5-d.length,dropzoneText:x(w,"USER_IMAGE_PROFILE_TEXT",5-d.length),acceptedFiles:["image/jpeg","image/png","image/bmp"],showPreviews:!1,maxFileSize:25e5,showAlerts:!0,useChipsForPreview:!1,showPreviewsInDropzone:!0,fileObjects:[]}),i(L,{onClick:T,size:"medium",color:"primary",className:"mapps-user-images-upload-button",value:x(w,"Save"),isLoading:g})]}):i(k,{})}export{q as default};
